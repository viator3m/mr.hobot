import logging
import os
import random

import requests

from telegram import InlineKeyboardMarkup, InlineKeyboardButton, Update
from telegram.ext import Updater, Filters, MessageHandler, CommandHandler, \
    CallbackQueryHandler, CallbackContext

from dotenv import load_dotenv

load_dotenv()

TOKEN = os.getenv('TELEGRAM_TOKEN')

logging.basicConfig(
    format='%(asctime)s | %(name)s | %(levelname)s | %(message)s',
    level=logging.INFO
)

CAT_URL_PHOTO = 'https://api.thecatapi.com/v1/images/search'
CAt_URL_GIF = 'https://api.thecatapi.com/v1/images/search?mime_types=gif'

BUTTONS = InlineKeyboardMarkup(
    [
        [
            InlineKeyboardButton('–ï—â—ë —Ñ–æ—Ç–æ –∫–æ—Ç–∏–∫–∞!', callback_data='photo'),
            InlineKeyboardButton('–ï—â—ë –≥–∏—Ñ–∫—É –∫–æ—Ç–∏–∫–∞!', callback_data='gif')
        ],
    ],
    resize_keyboard=True)


def say_hi(update: Update, context: CallbackContext) -> None:
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–µ–∫—Å—Ç –≤ –æ—Ç–≤–µ—Ç –Ω–∞ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    chat = update.effective_chat
    context.bot.send_message(
        chat_id=chat.id,
        text='–Ø –ø–æ–∫–∞ —Ç–æ–ª—å–∫–æ —É–º–µ—é –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –∫—Ä–∞—Å–∏–≤–æ–µ –∏ —Å–º–µ—à–Ω–æ–µ.üò∏\n'
             '–ù–æ —Å–∫–æ—Ä–æ –µ—â–µ —á–µ–º—É-–Ω–∏–±—É–¥—å –Ω–∞—É—á—É—Å—å üòé\n'
             '*—Å–ª–æ–Ω–æ–≤—Å–∫–∏–µ —Ä–∞–¥–æ—Å—Ç–Ω—ã–µ –∑–≤—É–∫–∏*\n')


def get_new_image(url: str) -> str:
    """–î–µ–ª–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞ THE CAT API. –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Å—ã–ª–∫—É –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ."""
    try:
        response = requests.get(url).json()
    except Exception as error:
        logging.error(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É API: {error}')
        dog_url = 'https://api.thedogapi.com/v1/images/search'
        response = requests.get(dog_url).json()

    random_cat = response[0].get('url')
    return random_cat


def new_cat(update: Update, context: CallbackContext, content: str) -> None:
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤ —á–∞—Ç —Ñ–æ—Ç–æ/–≥–∏—Ñ–∫—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ content."""
    chat = update.effective_chat
    if content == 'photo':
        context.bot.send_photo(
            chat.id,
            get_new_image(CAT_URL_PHOTO),
            reply_markup=BUTTONS
        )
    elif content == 'gif':
        context.bot.send_animation(
            chat.id,
            get_new_image(CAt_URL_GIF),
            reply_markup=BUTTONS
        )


def wake_up(update: Update, context: CallbackContext) -> None:
    """–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –°—Ä–∞–∑—É –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ñ–æ—Ç–æ –∏–ª–∏ –≥–∏—Ñ–∫—É."""
    chat = update.effective_chat
    name = update.effective_chat.first_name

    context.bot.send_message(
        chat_id=chat.id,
        text=f'–ü—Ä–∏–≤–µ—Ç, {name}! –ü–æ—Å–º–æ—Ç—Ä–∏ –∫–∞–∫–æ–≥–æ –∫–æ—Ç–∏–∫–∞ —è —Ç–µ–±–µ –Ω–∞—à–µ–ª.',
    )
    content = random.choice(('photo', 'gif'))
    new_cat(update, context, content)


def button(update: Update, context: CallbackContext) -> None:
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –Ω—É–∂–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é, –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∑–∞–ø—Ä–æ—Å–∞."""
    query = update.callback_query
    query.answer()
    if query.data == 'photo':
        new_cat(update, context, 'photo')
    elif query.data == 'gif':
        new_cat(update, context, 'gif')


def main() -> None:
    """–û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º—ã."""
    updater = Updater(token=TOKEN)

    updater.dispatcher.add_handler(CommandHandler('start', wake_up))
    updater.dispatcher.add_handler(CallbackQueryHandler(button))
    updater.dispatcher.add_handler(MessageHandler(Filters.text, say_hi))

    updater.start_polling()
    updater.idle()


if __name__ == '__main__':
    main()
